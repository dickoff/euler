//
//  2.swift
//  euler
//
//  Created by Matt Dickoff on 9/15/18.
//  Copyright Â© 2018 Matt Dickoff. All rights reserved.
//

import Foundation

class Problem2: Problem {
    var problemDefinition: String = """
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
"""
    
    func getNextFibonacci(last:Int, penultimate: Int) -> Int {
        return last + penultimate
    }
    
    func evaluateCandidateValue(value:Int) -> Bool {
        return value % 2 == 0
    }
    
    func solve() -> Answer {
        var penultimate = 1
        var last = 2
        var summation = 2
        var candidate = getNextFibonacci(last: last, penultimate: penultimate)

        while (candidate < 4000000) {
            if (evaluateCandidateValue(value: candidate)) {
                summation += candidate
            }
            penultimate = last
            last = candidate
            candidate = getNextFibonacci(last: last, penultimate: penultimate)
            
        }
        return Answer(result: "\(summation)")
    }
    
    
}
